/***********************************************************************
 * Header File:	FlyingObject.h
 * Author:	Daniel R. Thomson
 * Summary:	An abstract class that both bullet and bird types
 *		inherit from.
 ************************************************************************/

#include "flyingObject.h"

/*********************************************
 * FLYINGOBJECT :: Constructor
 *********************************************/
FlyingObject::FlyingObject()
{
  setAlive(true);
}

/*********************************************
 * FLYINGOBJECT :: Non Default Constructor
 *********************************************/
FlyingObject::FlyingObject(const Point pos, const Velocity motion)
{
  setAlive(true);
  setPoint(pos);
  setVelocity(motion);
}

/*********************************************
 * FLYINGOBJECT :: Destructor
 *********************************************/
FlyingObject :: ~FlyingObject()
{
  
}

/*********************************************
 * FlyingObject :: setPoint
 *	Mutator for objects of type Point
 *********************************************/
void FlyingObject::setPoint(Point pos)
{
  this->pos = pos;
}

/*********************************************
 * FlyingObject :: setVelocity
 *	Mutator for objects of type Velocity
 *********************************************/
void FlyingObject::setVelocity(Velocity motion)
{
  this->motion = motion;
}

/*********************************************
 * FlyingObject :: kill
 *   Get rid of the draw instance of that
 *   object and aid in the logic of game.h|.cpp
 *********************************************/
void FlyingObject::kill()
{
  setAlive(false);
}
